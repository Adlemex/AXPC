window.isMobile = !1;
if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
    window.isMobile = !0
}

function t_throttle(fn, threshhold, scope) {
    var last;
    var deferTimer;
    threshhold || (threshhold = 250);
    return function () {
        var context = scope || this;
        var now = +new Date();
        var args = arguments;
        if (last && now < last + threshhold) {
            clearTimeout(deferTimer);
            deferTimer = setTimeout(function () {
                last = now;
                fn.apply(context, args)
            }, threshhold)
        } else {
            last = now;
            fn.apply(context, args)
        }
    }
}

function t446_init(recid) {
    var rec = document.getElementById('rec' + recid);
    if (!rec) return;
    var linkItems = rec.querySelectorAll('.t-menu__link-item');
    var subMenuLinks = rec.querySelectorAll('.t-menusub__link-item');
    var menu = rec.querySelector('.t446');
    Array.prototype.forEach.call(linkItems, function (link) {
        link.addEventListener('click', function () {
            if (link.classList.contains('t-menusub__target-link') || link.classList.contains('tooltipstered') || link.classList.contains('t794__tm-link') || link.classList.contains('t966__tm-link') || link.classList.contains('t978__tm-link')) return;
            t446_hideMenuOnMobile(link, rec)
        })
    });
    Array.prototype.forEach.call(subMenuLinks, function (subMenuLink) {
        subMenuLink.addEventListener('click', function () {
            t446_hideMenuOnMobile(subMenuLink, rec)
        })
    })
}

function t446_setLogoPadding(recid) {
    var rec = document.getElementById('rec' + recid);
    if (!rec || window.innerWidth <= 980) return;
    var menu = rec.querySelector('.t446');
    var logo = menu ? menu.querySelector('.t446__logowrapper') : null;
    var logoWidth = logo ? logo.offsetWidth : 0;
    var leftWrapper = menu ? menu.querySelector('.t446__leftwrapper') : null;
    var rightWrapper = menu ? menu.querySelector('.t446__rightwrapper') : null;
    if (leftWrapper) leftWrapper.style.paddingRight = ((logoWidth / 2) + 50) + 'px';
    if (rightWrapper) rightWrapper.style.paddingLeft = ((logoWidth / 2) + 50) + 'px'
}

function t446_checkOverflow(recid, menuheight) {
    var rec = document.getElementById('rec' + recid);
    var menu = rec ? rec.querySelector('.t446') : null;
    if (!menu) return;
    var rightWrapper = menu.querySelector('.t446__rightwrapper');
    var rightMenuWrap = rightWrapper ? rightWrapper.querySelector('.t446__rightmenuwrapper') : null;
    var additionalWrap = rightWrapper ? rightWrapper.querySelector('.t446__additionalwrapper') : null;
    var burgerWrapOverflow = rightWrapper ? rightWrapper.querySelector('.t446__burgerwrapper_overflow') : null;
    var burgerWrap = rightWrapper ? rightWrapper.querySelector('.t446__burgerwrapper_withoutoverflow') : null;
    var rightWrapperWidth = t446_getPureWidth(rightWrapper);
    var rightMenuWrapWidth = rightMenuWrap ? rightMenuWrap.offsetWidth : 0;
    var additionalWrapWidth = additionalWrap ? additionalWrap.offsetWidth : 0;
    var additionalWrapFloating = additionalWrap ? additionalWrap.style.float || window.getComputedStyle(additionalWrap).float : '';
    var blockHeight = menuheight > 0 ? menuheight : 80;
    if (window.innerWidth > 980 && rightMenuWrapWidth + additionalWrapWidth > rightWrapperWidth) {
        menu.style.height = (blockHeight * 2) + 'px';
        if (additionalWrap) additionalWrap.style.float = 'right';
        if (burgerWrapOverflow) burgerWrapOverflow.style.display = 'table-cell';
        if (burgerWrap) burgerWrap.style.display = 'none'
    } else {    /*
     _                _                                   _ _
  __| | _____   _____| | ___  _ __   ___ _ __    __ _  __| | | ___ _ __ ___ __  __
 / _` |/ _ \ \ / / _ \ |/ _ \| '_ \ / _ \ '__|  / _` |/ _` | |/ _ \ '_ ` _ \\ \/ /
| (_| |  __/\ V /  __/ | (_) | |_) |  __/ |    | (_| | (_| | |  __/ | | | | |>  <
 \__,_|\___| \_/ \___|_|\___/| .__/ \___|_|     \__,_|\__,_|_|\___|_| |_| |_/_/\_\
                             |_|
    */
        if (menu.offsetHeight > blockHeight) menu.style.height = blockHeight + 'px';
        if (additionalWrap && additionalWrapFloating === 'right') additionalWrap.style.float = 'none';
        if (burgerWrapOverflow) burgerWrapOverflow.style.display = 'none';
        if (burgerWrap) burgerWrap.style.display = 'table-cell'
    }
}

function t446_getPureWidth(el) {
    if (!el) return 0;
    var elWidth = el.offsetWidth;
    var elPaddingLeft = parseInt(window.getComputedStyle(el).paddingLeft, 10) || 0;
    var elPaddingRight = parseInt(window.getComputedStyle(el).paddingRight, 10) || 0;
    var width = elWidth - (elPaddingLeft + elPaddingRight);
    return width > 0 ? width : 0
}

function t446_createMobileMenu(recid) {
    var rec = document.getElementById('rec' + recid);
    if (!rec) return;
    t_onFuncLoad('t_menu__createMobileMenu', function () {
        t_menu__createMobileMenu(recid, '.t446')
    });
    var linkItems = rec.querySelectorAll('.t-menu__link-item');
    var submenuClassList = ['t978__menu-link_hook', 't978__tm-link', 't966__tm-link', 't794__tm-link', 't-menusub__target-link'];
    Array.prototype.forEach.call(linkItems, function (link) {
        link.addEventListener('click', function () {
            var isSubmenuHook = submenuClassList.some(function (submenuClass) {
                return link.classList.contains(submenuClass)
            });
            if (isSubmenuHook) return;
            t446_hideMenuOnMobile(link, rec)
        })
    });
    var wrappersLinks = rec.querySelectorAll('.t446__logowrapper2 a, .t446__right_buttons_wrap a');
    Array.prototype.forEach.call(wrappersLinks, function (link) {
        link.addEventListener('click', function () {
            t446_hideMenuOnMobile(link, rec)
        })
    })
}

function t446_hideMenuOnMobile(link, rec) {
    if (!rec || !link || window.innerWidth >= 980) return !1;
    var url = link.href ? link.href.trim() : '';
    var menu = rec.querySelector('.t446');
    var burger = rec.querySelector('.tmenu-mobile');
    if (url && link.matches('[href*="#"]')) {
        if (burger) burger.classList.remove('tmenu-mobile_opened');
        if (menu) {
            if (menu.classList.contains('t446__positionabsolute') || (burger && !burger.classList.contains('.tmenu-mobile_positionfixed'))) {
                menu.style.display = 'none';
                menu.style.opacity = '0'
            } else {
                t_onFuncLoad('t_menu__FadeOut', function () {
                    t_menu__FadeOut(menu, 300)
                })
            }
        }
    }
}

function t959__init(recId) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var container = rec.querySelector('.t959');
    if (!container) return;
    t959__updateLazyLoad(recId);
    t959_unifyHeights(recId);
    window.addEventListener('resize', t_throttle(function () {
        t959_unifyHeights(recId)
    }));
    window.addEventListener('load', function () {
        t959_unifyHeights(recId)
    });
    container.addEventListener('displayChanged', t_throttle(function () {
        t959_unifyHeights(recId)
    }));
    t_onFuncLoad('t_card__moveClickOnCard', function () {
        t_card__moveClickOnCard(recId)
    });
    t_onFuncLoad('t_card__addFocusOnTab', function () {
        t_card__addFocusOnTab(recId)
    })
}

function t959__updateLazyLoad(recId) {
    var allRecords = document.getElementById('allrecords');
    var container = document.querySelector('#rec' + recId + ' .t959__container_mobile-flex');
    var mode = allRecords.getAttribute('data-adlemx-mode');
    if (container && mode !== 'edit' && mode !== 'preview' && window.isMobile) {
        if (window.lazy === 'y' || allRecords.getAttribute('data-adlemx-lazy') === 'yes') {
            t_onFuncLoad('t_lazyload_update', function () {
                container.addEventListener('touchmove', t_throttle(function () {
                    t_lazyload_update()
                }))
            })
        }
    }
}

function t959_unifyHeights(recId) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var main = rec.querySelector('.t959');
    if (!main) return;
    var containers = main.querySelectorAll('.t959__container');
    for (var i = 0; i < containers.length; i++) {
        var container = containers[i];
        var cardsContent = container.querySelectorAll('.t959__card-content');
        var cards = container.querySelectorAll('.t959__card-inner');
        if (!cards.length) {
            return
        }
        var cardStyle = getComputedStyle(cards[0], null);
        var cardPaddingLeft = parseInt(cardStyle.paddingLeft) || 0;
        var cardPaddingRight = parseInt(cardStyle.paddingRight) || 0;
        var cardWidth = cards[0].clientWidth - (cardPaddingLeft + cardPaddingRight);
        var maxHeight = 0;
        var ratio = container.getAttribute('data-ratio');
        var minHeightFromRatio = 0;
        switch (ratio) {
            case '16_9':
                minHeightFromRatio = cardWidth * 0.5625;
                break;
            case '4_3':
                minHeightFromRatio = cardWidth * 0.75;
                break;
            case '3_2':
                minHeightFromRatio = cardWidth * 0.6666;
                break;
            case '1_1':
                minHeightFromRatio = cardWidth;
                break;
            case '2_3':
                minHeightFromRatio = cardWidth * 1.5;
                break;
            case '3_4':
                minHeightFromRatio = cardWidth * 1.3333;
                break;
            case '9_16':
                minHeightFromRatio = cardWidth * 1.7777;
                break
        }
        for (var j = 0; j < cardsContent.length; j++) {
            var cardContent = cardsContent[j];
            var titleHeight = t959_outerHeight(cardContent.querySelector('.t-card__title'));
            var descHeight = t959_outerHeight(cardContent.querySelector('.t-card__descr'));
            var colHeight = titleHeight + descHeight;
            if (colHeight > maxHeight) maxHeight = colHeight
        }
        if (maxHeight > minHeightFromRatio) {
            for (var j = 0; j < cards.length; j++) {
                cards[j].style.paddingBottom = maxHeight + 'px'
            }
        } else {
            for (var j = 0; j < cards.length; j++) {
                cards[j].style.paddingBottom = null
            }
        }
    }
}

function t959_outerHeight(element) {
    if (!element) return 0;
    var height = element.offsetHeight;
    var style = getComputedStyle(element);
    height += parseInt(style.marginTop) + parseInt(style.marginBottom);
    return height
}